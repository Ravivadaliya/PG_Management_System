USE [PG_ManagementSystem]
GO
/****** Object:  Schema [HangFire]    Script Date: 20-10-2024 00:39:06 ******/
CREATE SCHEMA [HangFire]
GO
/****** Object:  Table [dbo].[PG_Announcements]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Announcements](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Owner_ID] [int] NOT NULL,
	[Hostel_ID] [int] NOT NULL,
	[Announcement_Title] [varchar](255) NOT NULL,
	[Announcement_Message] [varchar](300) NOT NULL,
	[created_at] [date] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_Bed]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Bed](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Room_ID] [int] NOT NULL,
	[Bed_Number] [varchar](50) NOT NULL,
	[Bed_Status] [bit] NOT NULL,
	[Bed_CreatedDate] [date] NOT NULL,
	[Bed_ModificationDate] [date] NOT NULL,
	[Person_ID] [int] NULL,
	[Deposite] [int] NULL,
	[Payment_Date] [date] NULL,
	[Payment_Cycle] [varchar](10) NULL,
	[Owner_Id] [int] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_Hostel]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Hostel](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Owner_ID] [int] NOT NULL,
	[PG_Number] [varchar](20) NOT NULL,
	[Hostel_Address] [varchar](100) NOT NULL,
	[Hostel_CreatedDate] [date] NOT NULL,
	[Hostel_ModificationDate] [date] NOT NULL,
	[Hostel_MinimumPayment] [varchar](30) NOT NULL,
	[Hostel_Property_Category] [varchar](30) NOT NULL,
	[Hostel_Type] [varchar](30) NOT NULL,
	[Hostel_Floor] [varchar](30) NOT NULL,
	[Hostel_Society] [varchar](30) NOT NULL,
	[Hostel_Gender] [varchar](10) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_Issues]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Issues](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Person_ID] [int] NOT NULL,
	[Room_ID] [int] NOT NULL,
	[Hostel_ID] [int] NOT NULL,
	[Owner_ID] [int] NOT NULL,
	[Issue_Description] [varchar](50) NOT NULL,
	[Issue_ImgPath] [varchar](50) NOT NULL,
	[Issue_Status] [bit] NOT NULL,
	[Issue_CreatedDate] [date] NOT NULL,
	[Issue_ModificationDate] [date] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_Owner]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Owner](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Owner_Name] [varchar](50) NOT NULL,
	[Owner_Surname] [varchar](50) NOT NULL,
	[Owner_Mobile_Number] [varchar](50) NOT NULL,
	[Owner_EmailId] [varchar](100) NOT NULL,
	[Owner_Address] [varchar](100) NOT NULL,
	[Owner_Gender] [varchar](10) NOT NULL,
	[Owner_City] [varchar](50) NOT NULL,
	[Owner_State] [varchar](50) NOT NULL,
	[Owner_PassWord] [nvarchar](50) NOT NULL,
	[Owner_IsActive] [bit] NOT NULL,
	[Owner_CreatedDate] [date] NOT NULL,
	[Owner_ModificationDate] [date] NOT NULL,
	[PGName] [varchar](20) NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_Payment]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Payment](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Person_Id] [int] NOT NULL,
	[Owner_Id] [int] NOT NULL,
	[Payment_CreationDate] [date] NOT NULL,
	[Payment_Status] [bit] NOT NULL,
	[Payment_ReceivedDate] [date] NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_Person]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Person](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Owner_ID] [int] NOT NULL,
	[Person_Name] [varchar](50) NOT NULL,
	[Person_Surname] [varchar](50) NOT NULL,
	[Person_Mobile_Number] [varchar](10) NOT NULL,
	[Person_Parent_Mobile_Number] [varchar](10) NOT NULL,
	[Person_Email_ID] [varchar](100) NOT NULL,
	[Person_Gender] [varchar](100) NOT NULL,
	[Person_Address] [varchar](100) NOT NULL,
	[Person_City] [varchar](100) NOT NULL,
	[Person_Profession] [varchar](50) NOT NULL,
	[Person_WorkPlace] [varchar](50) NOT NULL,
	[Person_WorkPlace_MobileNumber] [varchar](50) NULL,
	[Person_JoningDate] [date] NOT NULL,
	[Person_PassWord] [varchar](50) NOT NULL,
	[Person_CreatedDate] [date] NOT NULL,
	[Person_ModificationDate] [date] NOT NULL,
	[Person_Image] [nvarchar](200) NULL,
	[Person_AadharCard] [varchar](30) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_Room]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Room](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Hostel_ID] [int] NOT NULL,
	[Room_SharingType] [int] NOT NULL,
	[Room_AllowcateBed] [int] NOT NULL,
	[Room_CreatedDate] [date] NOT NULL,
	[Room_ModificationDate] [date] NOT NULL,
	[Room_Type] [varchar](10) NOT NULL,
	[Room_Createbed] [int] NOT NULL,
	[Room_Rent] [varchar](20) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_Staff]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_Staff](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Owner_ID] [int] NOT NULL,
	[Staff_Name] [varchar](50) NOT NULL,
	[Staff_Surname] [varchar](50) NOT NULL,
	[Staff_Mobile_Number] [varchar](10) NOT NULL,
	[Staff_Gender] [varchar](10) NOT NULL,
	[Staff_Address] [varchar](100) NOT NULL,
	[Staff_City] [varchar](100) NOT NULL,
	[Owner_CreatedDate] [date] NOT NULL,
	[Owner_ModificationDate] [date] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PG_UserNotifications]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PG_UserNotifications](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[Person_ID] [int] NOT NULL,
	[Announcement_ID] [int] NOT NULL,
	[seen] [bit] NOT NULL,
	[created_at] [date] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[AggregatedCounter]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[AggregatedCounter](
	[Key] [nvarchar](100) NOT NULL,
	[Value] [bigint] NOT NULL,
	[ExpireAt] [datetime] NULL,
 CONSTRAINT [PK_HangFire_CounterAggregated] PRIMARY KEY CLUSTERED 
(
	[Key] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[Counter]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[Counter](
	[Key] [nvarchar](100) NOT NULL,
	[Value] [int] NOT NULL,
	[ExpireAt] [datetime] NULL,
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
 CONSTRAINT [PK_HangFire_Counter] PRIMARY KEY CLUSTERED 
(
	[Key] ASC,
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[Hash]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[Hash](
	[Key] [nvarchar](100) NOT NULL,
	[Field] [nvarchar](100) NOT NULL,
	[Value] [nvarchar](max) NULL,
	[ExpireAt] [datetime2](7) NULL,
 CONSTRAINT [PK_HangFire_Hash] PRIMARY KEY CLUSTERED 
(
	[Key] ASC,
	[Field] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = ON, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[Job]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[Job](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[StateId] [bigint] NULL,
	[StateName] [nvarchar](20) NULL,
	[InvocationData] [nvarchar](max) NOT NULL,
	[Arguments] [nvarchar](max) NOT NULL,
	[CreatedAt] [datetime] NOT NULL,
	[ExpireAt] [datetime] NULL,
 CONSTRAINT [PK_HangFire_Job] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[JobParameter]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[JobParameter](
	[JobId] [bigint] NOT NULL,
	[Name] [nvarchar](40) NOT NULL,
	[Value] [nvarchar](max) NULL,
 CONSTRAINT [PK_HangFire_JobParameter] PRIMARY KEY CLUSTERED 
(
	[JobId] ASC,
	[Name] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[JobQueue]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[JobQueue](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[JobId] [bigint] NOT NULL,
	[Queue] [nvarchar](50) NOT NULL,
	[FetchedAt] [datetime] NULL,
 CONSTRAINT [PK_HangFire_JobQueue] PRIMARY KEY CLUSTERED 
(
	[Queue] ASC,
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[List]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[List](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[Key] [nvarchar](100) NOT NULL,
	[Value] [nvarchar](max) NULL,
	[ExpireAt] [datetime] NULL,
 CONSTRAINT [PK_HangFire_List] PRIMARY KEY CLUSTERED 
(
	[Key] ASC,
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[Schema]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[Schema](
	[Version] [int] NOT NULL,
 CONSTRAINT [PK_HangFire_Schema] PRIMARY KEY CLUSTERED 
(
	[Version] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[Server]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[Server](
	[Id] [nvarchar](200) NOT NULL,
	[Data] [nvarchar](max) NULL,
	[LastHeartbeat] [datetime] NOT NULL,
 CONSTRAINT [PK_HangFire_Server] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[Set]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[Set](
	[Key] [nvarchar](100) NOT NULL,
	[Score] [float] NOT NULL,
	[Value] [nvarchar](256) NOT NULL,
	[ExpireAt] [datetime] NULL,
 CONSTRAINT [PK_HangFire_Set] PRIMARY KEY CLUSTERED 
(
	[Key] ASC,
	[Value] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = ON, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [HangFire].[State]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [HangFire].[State](
	[Id] [bigint] IDENTITY(1,1) NOT NULL,
	[JobId] [bigint] NOT NULL,
	[Name] [nvarchar](20) NOT NULL,
	[Reason] [nvarchar](100) NULL,
	[CreatedAt] [datetime] NOT NULL,
	[Data] [nvarchar](max) NULL,
 CONSTRAINT [PK_HangFire_State] PRIMARY KEY CLUSTERED 
(
	[JobId] ASC,
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE [dbo].[PG_Announcements] ADD  DEFAULT (getdate()) FOR [created_at]
GO
ALTER TABLE [dbo].[PG_Bed] ADD  DEFAULT ((0)) FOR [Bed_Status]
GO
ALTER TABLE [dbo].[PG_Bed] ADD  DEFAULT (getdate()) FOR [Bed_CreatedDate]
GO
ALTER TABLE [dbo].[PG_Bed] ADD  DEFAULT (getdate()) FOR [Bed_ModificationDate]
GO
ALTER TABLE [dbo].[PG_Hostel] ADD  DEFAULT (getdate()) FOR [Hostel_CreatedDate]
GO
ALTER TABLE [dbo].[PG_Hostel] ADD  DEFAULT (getdate()) FOR [Hostel_ModificationDate]
GO
ALTER TABLE [dbo].[PG_Issues] ADD  DEFAULT (getdate()) FOR [Issue_CreatedDate]
GO
ALTER TABLE [dbo].[PG_Issues] ADD  DEFAULT (getdate()) FOR [Issue_ModificationDate]
GO
ALTER TABLE [dbo].[PG_Owner] ADD  DEFAULT (getdate()) FOR [Owner_CreatedDate]
GO
ALTER TABLE [dbo].[PG_Owner] ADD  DEFAULT (getdate()) FOR [Owner_ModificationDate]
GO
ALTER TABLE [dbo].[PG_Person] ADD  DEFAULT (getdate()) FOR [Person_CreatedDate]
GO
ALTER TABLE [dbo].[PG_Person] ADD  DEFAULT (getdate()) FOR [Person_ModificationDate]
GO
ALTER TABLE [dbo].[PG_Room] ADD  DEFAULT (getdate()) FOR [Room_CreatedDate]
GO
ALTER TABLE [dbo].[PG_Room] ADD  DEFAULT (getdate()) FOR [Room_ModificationDate]
GO
ALTER TABLE [dbo].[PG_Staff] ADD  DEFAULT (getdate()) FOR [Owner_CreatedDate]
GO
ALTER TABLE [dbo].[PG_Staff] ADD  DEFAULT (getdate()) FOR [Owner_ModificationDate]
GO
ALTER TABLE [dbo].[PG_UserNotifications] ADD  DEFAULT ((1)) FOR [seen]
GO
ALTER TABLE [dbo].[PG_UserNotifications] ADD  DEFAULT (getdate()) FOR [created_at]
GO
ALTER TABLE [dbo].[PG_Announcements]  WITH CHECK ADD FOREIGN KEY([Hostel_ID])
REFERENCES [dbo].[PG_Hostel] ([Id])
GO
ALTER TABLE [dbo].[PG_Announcements]  WITH CHECK ADD FOREIGN KEY([Owner_ID])
REFERENCES [dbo].[PG_Owner] ([Id])
GO
ALTER TABLE [dbo].[PG_Bed]  WITH CHECK ADD FOREIGN KEY([Room_ID])
REFERENCES [dbo].[PG_Room] ([Id])
GO
ALTER TABLE [dbo].[PG_Hostel]  WITH CHECK ADD FOREIGN KEY([Owner_ID])
REFERENCES [dbo].[PG_Owner] ([Id])
GO
ALTER TABLE [dbo].[PG_Issues]  WITH CHECK ADD FOREIGN KEY([Hostel_ID])
REFERENCES [dbo].[PG_Hostel] ([Id])
GO
ALTER TABLE [dbo].[PG_Issues]  WITH CHECK ADD FOREIGN KEY([Owner_ID])
REFERENCES [dbo].[PG_Owner] ([Id])
GO
ALTER TABLE [dbo].[PG_Issues]  WITH CHECK ADD FOREIGN KEY([Person_ID])
REFERENCES [dbo].[PG_Person] ([Id])
GO
ALTER TABLE [dbo].[PG_Issues]  WITH CHECK ADD FOREIGN KEY([Room_ID])
REFERENCES [dbo].[PG_Room] ([Id])
GO
ALTER TABLE [dbo].[PG_Payment]  WITH CHECK ADD FOREIGN KEY([Owner_Id])
REFERENCES [dbo].[PG_Owner] ([Id])
GO
ALTER TABLE [dbo].[PG_Payment]  WITH CHECK ADD FOREIGN KEY([Person_Id])
REFERENCES [dbo].[PG_Person] ([Id])
GO
ALTER TABLE [dbo].[PG_Person]  WITH CHECK ADD FOREIGN KEY([Owner_ID])
REFERENCES [dbo].[PG_Owner] ([Id])
GO
ALTER TABLE [dbo].[PG_Room]  WITH CHECK ADD FOREIGN KEY([Hostel_ID])
REFERENCES [dbo].[PG_Hostel] ([Id])
GO
ALTER TABLE [dbo].[PG_Staff]  WITH CHECK ADD FOREIGN KEY([Owner_ID])
REFERENCES [dbo].[PG_Owner] ([Id])
GO
ALTER TABLE [dbo].[PG_UserNotifications]  WITH CHECK ADD FOREIGN KEY([Announcement_ID])
REFERENCES [dbo].[PG_Announcements] ([ID])
GO
ALTER TABLE [dbo].[PG_UserNotifications]  WITH CHECK ADD FOREIGN KEY([Person_ID])
REFERENCES [dbo].[PG_Person] ([Id])
GO
ALTER TABLE [HangFire].[JobParameter]  WITH CHECK ADD  CONSTRAINT [FK_HangFire_JobParameter_Job] FOREIGN KEY([JobId])
REFERENCES [HangFire].[Job] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [HangFire].[JobParameter] CHECK CONSTRAINT [FK_HangFire_JobParameter_Job]
GO
ALTER TABLE [HangFire].[State]  WITH CHECK ADD  CONSTRAINT [FK_HangFire_State_Job] FOREIGN KEY([JobId])
REFERENCES [HangFire].[Job] ([Id])
ON UPDATE CASCADE
ON DELETE CASCADE
GO
ALTER TABLE [HangFire].[State] CHECK CONSTRAINT [FK_HangFire_State_Job]
GO
/****** Object:  StoredProcedure [dbo].[GetPersonIdByPartialMobileNumber]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GetPersonIdByPartialMobileNumber]
    @PartialMobileNumber VARCHAR(15)
AS
BEGIN
    SELECT P.Id, P.Person_Mobile_Number
    FROM PG_Person P
    LEFT JOIN PG_Bed B ON P.Id = B.Person_ID
    WHERE P.Person_Mobile_Number LIKE '%' + @PartialMobileNumber + '%'
    AND B.Person_ID IS NULL; -- Exclude those who have a bed assigned
END
GO
/****** Object:  StoredProcedure [dbo].[SP_CheckBedDuplicateEntry]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[SP_CheckBedDuplicateEntry]
@Room_ID int,
@Bed_Number varchar(20)
as
select COUNT(*) from PG_Bed where Room_ID=@Room_ID and Bed_Number = @Bed_Number
GO
/****** Object:  StoredProcedure [dbo].[SP_CheckRoomDuplicateEntry]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_CheckRoomDuplicateEntry]
@Room_SharingType varchar(30),
@Hostel_ID int
as
SELECT COUNT(*) FROM PG_Room WHERE Room_SharingType = @Room_SharingType and Hostel_ID = @Hostel_ID
GO
/****** Object:  StoredProcedure [dbo].[SP_CountPersonByowner]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[SP_CountPersonByowner]
@Owner_Id int
as
SELECT COUNT(*)
FROM PG_Person
WHERE PG_Person.Owner_ID = @Owner_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_GetHostelDetailsWithBedCounts]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[SP_GetHostelDetailsWithBedCounts]
@OwnerID INT
AS
BEGIN
    SELECT 
        H.ID,
        H.PG_Number,
        H.Hostel_Address,
        H.Hostel_CreatedDate,
        H.Hostel_ModificationDate,
        H.Hostel_MinimumPayment,
        H.Hostel_Property_Category,
        H.Hostel_Type,
        H.Hostel_Floor,
        H.Hostel_Society,
        H.Hostel_Gender,
        
        -- Count of total empty beds
        COUNT(CASE WHEN B.Person_ID IS NULL OR B.Bed_Status = 0 THEN B.ID END) AS Total_Empty_Beds,

        -- Count of total assigned beds
        COUNT(CASE WHEN B.Person_ID IS NOT NULL AND B.Bed_Status = 1 THEN B.ID END) AS Total_Assigned_Beds

    FROM PG_Hostel H
    LEFT JOIN PG_Room R ON H.ID = R.Hostel_ID
    LEFT JOIN PG_Bed B ON R.ID = B.Room_ID
    WHERE H.Owner_ID = @OwnerID
    GROUP BY 
        H.ID,
        H.PG_Number,
        H.Hostel_Address,
        H.Hostel_CreatedDate,
        H.Hostel_ModificationDate,
        H.Hostel_MinimumPayment,
        H.Hostel_Property_Category,
        H.Hostel_Type,
        H.Hostel_Floor,
        H.Hostel_Society,
        H.Hostel_Gender;
END;
GO
/****** Object:  StoredProcedure [dbo].[Sp_GetPersonByHostelId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[Sp_GetPersonByHostelId]
@HostelId int
as
select * from PG_Person 
where  Hostel_ID = @HostelId
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPersonById]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_GetPersonById]
@Person_ID int
as
select * from PG_Person
where PG_Person.Id = @Person_ID
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPersonByPartialMobileNumber]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_GetPersonByPartialMobileNumber]
    @PartialMobileNumber NVARCHAR(20)
AS
BEGIN
    -- Retrieve persons whose PersonID is not in the Bed table and mobile number contains the given partial number
    SELECT p.Id, p.Person_Mobile_Number
    FROM PG_Person p
    LEFT JOIN PG_Bed b ON p.Id = b.Person_ID
    WHERE p.Person_Mobile_Number LIKE '%' + @PartialMobileNumber + '%'
    AND b.Person_ID IS NULL; -- Ensure the person does not exist in PG_Bed
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPersonWithBedDetails]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_GetPersonWithBedDetails] 
    @PG_Id VARCHAR(50)
AS
BEGIN
    SELECT 
        P.ID,
        P.Person_Name,
        P.Person_Surname,
		p.Person_Profession,
        P.Person_Mobile_Number,
        P.Person_Parent_Mobile_Number,
        B.Bed_Number,
        R.Room_Type,
        R.Room_Rent
    FROM PG_Bed B
    INNER JOIN PG_Person P ON B.Person_ID = P.Id
    INNER JOIN PG_Room R ON B.Room_ID = R.Id
    INNER JOIN PG_Hostel H ON R.Hostel_ID = H.Id
    WHERE H.Id = @PG_Id
      AND B.Person_ID IS NOT NULL;
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPGPayment]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_GetPGPayment]
    @Person_Id INT = NULL,
    @Owner_Id INT = NULL
AS
BEGIN
    SELECT * 
    FROM PG_Payment
    WHERE (@Person_Id IS NULL OR Person_Id = @Person_Id)
    AND (@Owner_Id IS NULL OR Owner_Id = @Owner_Id);
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_InsertPaymentByAdmin]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_InsertPaymentByAdmin]
@Person_Id int,
@Owner_Id int,
@Payment_Status bit,
@Payment_CreationDate Date
as
insert into PG_Payment(Person_Id,Owner_Id,Payment_Status,Payment_CreationDate)
values (@Person_Id,@Owner_Id,@Payment_Status,@Payment_CreationDate)
GO
/****** Object:  StoredProcedure [dbo].[SP_InsertPersonOnBed]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_InsertPersonOnBed]
@Bed_ID int,
@Person_ID int,
@Deposit int,
@Payment_Date date,
@Payment_Cycle varchar(10)
as
update PG_Bed
set Person_ID = @Person_ID
   ,Deposite = @Deposit
   ,Payment_Date = @Payment_Date
   ,Payment_Cycle = @Payment_Cycle
   ,Bed_Status = 1
where Id = @Bed_ID
GO
/****** Object:  StoredProcedure [dbo].[SP_InsertPGPaymentFromUser]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_InsertPGPaymentFromUser]
    @Person_Id INT,
    @Owner_Id INT,
    @Payment_Image VARCHAR(100)
AS
BEGIN
    INSERT INTO PG_Payment (Person_Id, Owner_Id, Payment_Image)
    VALUES (@Person_Id, @Owner_Id, @Payment_Image);
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_Issue_PenddingCount]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_Issue_PenddingCount]
@Owner_Id int
as
select COUNT(*) from PG_Issues
where Issue_Status = 0
and Owner_ID = @Owner_Id

GO
/****** Object:  StoredProcedure [dbo].[Sp_PG_Announcement_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Sp_PG_Announcement_Insert]
    @Owner_ID INT,
    @Hostel_ID INT,
    @Announcement_Title VARCHAR(255),
    @Announcement_Message TEXT
AS
BEGIN
    INSERT INTO PG_Announcements (Owner_ID, Hostel_ID, Announcement_Title, Announcement_Message, created_at)
    VALUES (@Owner_ID, @Hostel_ID, @Announcement_Title, @Announcement_Message, GETDATE());

	SELECT SCOPE_IDENTITY() AS Announcement_ID;  -- Return the newly inserted Announcement_ID

END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Bed_Delete]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_PG_Bed_Delete]
    @Id int
AS
BEGIN
    DELETE FROM PG_Bed WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Bed_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Bed_Insert]
    @Room_ID int,
    @Bed_Number varchar(10),
    @Bed_Status bit
AS
BEGIN
    INSERT INTO PG_Bed (Room_ID, Bed_Number, Bed_Status)
    VALUES (@Room_ID, @Bed_Number, @Bed_Status)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Bed_SelectAll]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Bed_SelectAll]
as
    SELECT * FROM PG_Bed 
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Bed_SelectById]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Bed_SelectById]
    @Id int
AS
BEGIN
    SELECT * FROM PG_Bed WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Bed_Update]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Bed_Update]
    @Id int,
    @Room_ID int,
    @Bed_Number int,
    @Bed_Status bit
AS
BEGIN
    UPDATE PG_Bed
    SET Room_ID = @Room_ID,
        Bed_Number = @Bed_Number,
        Bed_Status = @Bed_Status,
        Bed_ModificationDate = GETDATE()
    WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Hostel_Delete]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Hostel_Delete]
    @Id int
AS
BEGIN
    DELETE FROM PG_Hostel WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Hostel_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Hostel_Insert]
    @Owner_ID int,
    @PG_Number varchar(20),
    @Hostel_Address varchar(100),
    @Hostel_MinimumPayment varchar(20),
    @Hostel_Type varchar(100),
    @Hostel_Property_Category varchar(100),
	@Hostel_Floor varchar(30),
	@Hostel_Society varchar(30),
	@Hostel_Gender varchar(10)
AS
BEGIN
    INSERT INTO PG_Hostel (Owner_ID, PG_Number, Hostel_Address,Hostel_MinimumPayment,Hostel_Property_Category,Hostel_Type,Hostel_Floor,Hostel_Society,Hostel_Gender)
    VALUES (@Owner_ID, @PG_Number, @Hostel_Address,@Hostel_MinimumPayment,@Hostel_Property_Category,@Hostel_Type,@Hostel_Floor,@Hostel_Society,@Hostel_Gender)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Hostel_SelectById]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Hostel_SelectById]
    @Id int
AS
BEGIN
    SELECT * FROM PG_Hostel WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Hostel_SelectByOwnerId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

	create PROCEDURE [dbo].[SP_PG_Hostel_SelectByOwnerId]
	@Owner_ID int
AS
    SELECT * FROM PG_Hostel  where PG_Hostel.Owner_ID = @Owner_ID
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Hostel_Update]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Hostel_Update]
    @Id int,
    @Owner_ID int,
    @PG_Number varchar(20),
    @Hostel_Address varchar(100),
    @Hostel_MinimumPayment varchar(100),
    @Hostel_Type varchar(100),
    @Hostel_Property_Category varchar(100),
	@Hostel_Floor varchar(30),
	@Hostel_Society varchar(30),
	@Hostel_Gender varchar(10)
AS
BEGIN
    UPDATE PG_Hostel
    SET Owner_ID = @Owner_ID,
        PG_Number = @PG_Number,
        Hostel_Address = @Hostel_Address,
        Hostel_MinimumPayment = @Hostel_MinimumPayment,
        Hostel_Type = @Hostel_Type,
        Hostel_Property_Category = @Hostel_Property_Category,
        Hostel_Floor = @Hostel_Floor,
		Hostel_Society = @Hostel_Society,
		Hostel_Gender = @Hostel_Gender,
        Hostel_ModificationDate = GETDATE()
    WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Isssue_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[SP_PG_Isssue_Insert]
@Person_ID int,
@Room_ID int,
@Hostel_ID int,
@owner_ID int,
@Issue_ImgPath varchar(100),
@Issue_Status bit,
@Issue_Description varchar(100)
as
insert into PG_Issues(Person_ID,Room_ID,Hostel_ID,owner_ID,Issue_ImgPath,Issue_Status,Issue_Description)
values(@Person_ID,@Room_ID,@Hostel_ID,@owner_ID,@Issue_ImgPath,@Issue_Status,@Issue_Description)
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Issues_Delete]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Issues_Delete]
    @Id int
AS
BEGIN
    DELETE FROM PG_Issues WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Issues_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Issues_Insert]
    @Person_ID int,
    @Room_ID int,
    @Hostel_ID int,
    @Owner_ID int,
    @Issue_Description varchar(50),
    @Issue_ImgPath varchar(50),
    @Issue_Status bit
AS
BEGIN
    INSERT INTO PG_Issues (Person_ID, Room_ID, Hostel_ID, Owner_ID, Issue_Description, Issue_ImgPath, Issue_Status)
    VALUES (@Person_ID, @Room_ID, @Hostel_ID, @Owner_ID, @Issue_Description, @Issue_ImgPath, @Issue_Status)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Issues_SelectAll]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Issues_SelectAll]
AS
    SELECT * FROM PG_Issues 
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Issues_SelectById]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Issues_SelectById]
    @Id int
AS
BEGIN
    SELECT * FROM PG_Issues WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_IssuesStatus_Update]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_IssuesStatus_Update]
    @Id int,
    @Issue_Status bit
AS
BEGIN
    UPDATE PG_Issues
    SET Issue_Status = @Issue_Status,
        Issue_ModificationDate = GETDATE()
    WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Owner_Delete]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Owner_Delete]
    @Id int
AS
BEGIN
    DELETE FROM PG_Owner WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Owner_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Owner_Insert]
    @Owner_Name varchar(50),
    @Owner_Surname varchar(50),
    @Owner_Mobile_Number int,
    @Owner_EmailId varchar(100),
    @Owner_Address varchar(100),
    @Owner_Gender varchar(10),
    @Owner_City varchar(50),
    @Owner_State varchar(50),
    @Owner_PassWord nvarchar(50),
    @Owner_IsActive bit
AS
BEGIN
    INSERT INTO PG_Owner (Owner_Name, Owner_Surname, Owner_Mobile_Number, Owner_EmailId, Owner_Address, Owner_Gender, Owner_City, Owner_State, Owner_PassWord, Owner_IsActive)
    VALUES (@Owner_Name, @Owner_Surname, @Owner_Mobile_Number, @Owner_EmailId, @Owner_Address, @Owner_Gender, @Owner_City, @Owner_State, @Owner_PassWord, @Owner_IsActive)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Owner_SelectAll]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Owner_SelectAll]
as
    SELECT * FROM PG_Owner

GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Owner_SelectById]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Owner_SelectById]
    @Id int
AS
BEGIN
    SELECT * FROM PG_Owner WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Owner_Update]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Owner_Update]
    @Id int,
    @Owner_Name varchar(50),
    @Owner_Surname varchar(50),
    @Owner_Mobile_Number int,
    @Owner_EmailId varchar(100),
    @Owner_Address varchar(100),
    @Owner_Gender varchar(10),
    @Owner_City varchar(50),
    @Owner_State varchar(50),
    @Owner_PassWord nvarchar(50),
    @Owner_IsActive bit
AS
BEGIN
    UPDATE PG_Owner
    SET Owner_Name = @Owner_Name,
        Owner_Surname = @Owner_Surname,
        Owner_Mobile_Number = @Owner_Mobile_Number,
        Owner_EmailId = @Owner_EmailId,
        Owner_Address = @Owner_Address,
        Owner_Gender = @Owner_Gender,
        Owner_City = @Owner_City,
        Owner_State = @Owner_State,
        Owner_PassWord = @Owner_PassWord,
        Owner_IsActive = @Owner_IsActive,
        Owner_ModificationDate = GETDATE()
    WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Payment_SelectByPersonId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_PG_Payment_SelectByPersonId]
@Person_Id	int
as
select PG_Person.Id 
	  ,PG_Payment.Payment_Image
	  ,PG_Payment.Payment_Status
	  ,PG_Payment.Payment_Date
	  ,PG_Payment.Payment_DueDate
	  ,Bed_ID
	  ,PG_Person.Room_ID
	  ,PG_Person.Hostel_ID
	  ,PG_Person.Hostel_ID
	  ,PG_Person.Owner_ID
	  ,PG_Room.Room_Rent
	  ,Person_Name
	  ,Person_Surname
	  ,Person_Email_ID
	  ,Person_Mobile_Number
	  ,Person_Parent_Mobile_Number
	  ,PG_Bed.Bed_Number
	  ,PG_Room.Room_SharingType
	  ,PG_Hostel.PG_Number
from PG_Person
inner join PG_Bed on Bed_ID = PG_Bed.Id
inner join PG_Room on PG_Person.Room_ID = PG_Room.Id
inner join PG_Hostel on PG_Person.Hostel_ID = PG_Hostel.Id
inner join PG_Payment on PG_Payment.Person_Id = PG_Person.Id 
where PG_Person.Id = @Person_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Payment_SelectCompletePaymentByOwnerIdHoatelId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Payment_SelectCompletePaymentByOwnerIdHoatelId] 
    @Owner_Id INT,
	@Hostel_Id int
AS
BEGIN
    SELECT
	    PG_Payment.ID,
		PG_Payment.Person_Id,
        PG_Payment.Payment_Status,
		PG_Payment.Payment_ReceivedDate,
		PG_Payment.Payment_CreationDate,
        PG_Person.Owner_ID,
        PG_Person.Person_Name,
        PG_Person.Person_Surname,
        PG_Person.Person_Email_ID,
        PG_Person.Person_Mobile_Number,
        PG_Person.Person_Parent_Mobile_Number,
        PG_Bed.Bed_Number,
        PG_Room.Room_SharingType,
		PG_Room.Room_Rent,
        PG_Hostel.PG_Number
    FROM 
        PG_Payment
	INNER JOIN 
        PG_Person on PG_Payment.Person_Id = PG_Person.Id
    INNER JOIN 
        PG_Bed ON PG_Person.Id= PG_Bed.Person_ID
    INNER JOIN 
        PG_Room ON PG_Bed.Room_ID = PG_Room.Id
    INNER JOIN 
        PG_Hostel ON PG_Room.Hostel_ID = PG_Hostel.Id
    WHERE 
        PG_Person.Owner_ID = @Owner_Id and PG_Hostel.ID = @Hostel_Id and Payment_Status = 1
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Payment_SelectPenddingPaymentByOwnerIdHoatelId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Payment_SelectPenddingPaymentByOwnerIdHoatelId] 
    @Owner_Id INT,
	@Hostel_Id int
AS
BEGIN
    SELECT
	    PG_Payment.ID,
		PG_Payment.Person_Id,
        PG_Payment.Payment_Status,
		PG_Payment.Payment_CreationDate,
        PG_Person.Owner_ID,
        PG_Person.Person_Name,
        PG_Person.Person_Surname,
        PG_Person.Person_Email_ID,
        PG_Person.Person_Mobile_Number,
        PG_Person.Person_Parent_Mobile_Number,
        PG_Bed.Bed_Number,
        PG_Bed.Payment_Cycle,
        PG_Bed.Deposite,
        PG_Room.Room_SharingType,
        PG_Room.Room_Rent,
        PG_Hostel.PG_Number
    FROM 
        PG_Payment
	INNER JOIN 
        PG_Person on PG_Payment.Person_Id = PG_Person.Id
    INNER JOIN 
        PG_Bed ON PG_Person.Id= PG_Bed.Person_ID
    INNER JOIN 
        PG_Room ON PG_Bed.Room_ID = PG_Room.Id
    INNER JOIN 
        PG_Hostel ON PG_Room.Hostel_ID = PG_Hostel.Id
    WHERE 
        PG_Person.Owner_ID = @Owner_Id and PG_Hostel.ID = @Hostel_Id and Payment_Status = 0
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_Delete]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Person_Delete]
    @Id int
AS
BEGIN
    DELETE FROM PG_Person WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Person_Insert]
    @Owner_ID int,
    @Person_Name varchar(50),
    @Person_Surname varchar(50),
    @Person_Mobile_Number varchar(10),
    @Person_Parent_Mobile_Number Varchar(10),
    @Person_Email_ID varchar(100),
    @Person_Gender varchar(100),
    @Person_Address varchar(100),
    @Person_City varchar(100),
    @Person_Profession varchar(50),
    @Person_WorkPlace varchar(50),
    @Person_WorkPlace_MobileNumber varchar(50),
    @Person_JoningDate Date,
	@Person_Image nvarchar(120),
	@Person_AadharCard varchar(20),
    @Person_PassWord varchar(50)
AS
BEGIN
    INSERT INTO PG_Person ( Owner_ID, Person_Name, Person_Surname, Person_Mobile_Number, Person_Parent_Mobile_Number, Person_Email_ID, Person_Gender, Person_Address, Person_City, Person_Profession, Person_WorkPlace, Person_WorkPlace_MobileNumber,Person_JoningDate,Person_Image,Person_AadharCard,Person_PassWord)
    VALUES ( @Owner_ID, @Person_Name, @Person_Surname, @Person_Mobile_Number, @Person_Parent_Mobile_Number, @Person_Email_ID, @Person_Gender, @Person_Address, @Person_City, @Person_Profession, @Person_WorkPlace, @Person_WorkPlace_MobileNumber, @Person_JoningDate,@Person_Image,@Person_AadharCard, @Person_PassWord)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_SelectAllByBedAssign]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Person_SelectAllByBedAssign]
AS
BEGIN
    -- Select all persons who have been assigned a bed (Person_ID is not NULL in PG_Bed)
    SELECT 
        p.Id,
		p.Owner_ID,
        p.Person_Name,
        p.Person_Surname,
        p.Person_Email_ID,
        p.Person_Mobile_Number,
        p.Person_Parent_Mobile_Number,
		b.Payment_Cycle,
        b.Bed_Number,
        r.Room_SharingType,
		r.Room_Rent,
		b.Deposite,
        h.PG_Number
    FROM 
        PG_Person p
    INNER JOIN 
        PG_Bed b ON p.Id = b.Person_ID
    INNER JOIN 
        PG_Room r ON b.Room_ID = r.Id
    INNER JOIN 
        PG_Hostel h ON r.Hostel_ID = h.Id
    WHERE 
        b.Person_ID IS NOT NULL -- Ensure only persons with assigned beds are retrieved
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_SelectAllByOwnerId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_PG_Person_SelectAllByOwnerId]
@Owner_Id int
as
   SELECT 
        PG_Person.Id,
        PG_Person.Owner_ID,
        PG_Person.Person_Name,
        PG_Person.Person_Surname,
        PG_Person.Person_Email_ID,
        PG_Person.Person_Mobile_Number,
        PG_Person.Person_Parent_Mobile_Number,
        PG_Person.Person_Address,
        PG_Person.Person_City,
        PG_Person.Person_Profession,
        PG_Person.Person_WorkPlace,
        PG_Person.Person_Image,
        PG_Person.Person_WorkPlace_MobileNumber,
        PG_Person.Person_JoningDate,
        PG_Bed.Bed_Number,
		PG_Bed.Id as Bed_Id,
        PG_Bed.Deposite,
        PG_Bed.Payment_Cycle,
        PG_Bed.Payment_Date,
        PG_Room.Room_Type,
        PG_Room.Room_SharingType,
        PG_Room.Room_Rent,
		PG_Hostel.PG_Number
    FROM 
        PG_Person
    LEFT JOIN 
        PG_Bed ON PG_Person.Id = PG_Bed.Person_ID -- Assuming there is a foreign key relationship
    LEFT JOIN 
        PG_Room ON PG_Bed.Room_ID = PG_Room.Id -- Assuming PG_Bed has a foreign key to PG_Room
	LEFT JOIN 
	    PG_Hostel on PG_Room.Hostel_ID = PG_Hostel.Id
where PG_Person.Owner_ID = @Owner_Id 
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_SelectAllByOwnerId_Paginated]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[SP_PG_Person_SelectAllByOwnerId_Paginated]
@Owner_Id int,
@Start int,
@Length int,
@SearchValue nvarchar(50),
@SortColumn nvarchar(50),
@SortDirection nvarchar(4)
AS
BEGIN
    -- SQL query for pagination, sorting, and filtering
    SELECT 
        PG_Person.Id,
        PG_Person.Owner_ID,
        PG_Person.Person_Name,
        PG_Person.Person_Surname,
        PG_Person.Person_Email_ID,
        PG_Person.Person_Mobile_Number,
        PG_Person.Person_Parent_Mobile_Number,
        PG_Person.Person_Address,
        PG_Person.Person_City,
        PG_Person.Person_Profession,
        PG_Person.Person_WorkPlace,
        PG_Person.Person_Image,
        PG_Person.Person_WorkPlace_MobileNumber,
        PG_Person.Person_JoningDate,
        PG_Bed.Bed_Number,
        PG_Bed.Deposite,
        PG_Bed.Payment_Cycle,
        PG_Bed.Payment_Date,
        PG_Room.Room_Type,
        PG_Room.Room_SharingType,
        PG_Room.Room_Rent,
        PG_Hostel.PG_Number
    FROM 
        PG_Person
    LEFT JOIN 
        PG_Bed ON PG_Person.Id = PG_Bed.Person_ID
    LEFT JOIN 
        PG_Room ON PG_Bed.Room_ID = PG_Room.Id
    LEFT JOIN 
        PG_Hostel ON PG_Room.Hostel_ID = PG_Hostel.Id
    WHERE 
        PG_Person.Owner_ID = @Owner_Id
        AND (
            PG_Person.Person_Name LIKE @SearchValue OR 
            PG_Person.Person_Surname LIKE @SearchValue OR 
            PG_Bed.Bed_Number LIKE @SearchValue OR 
            PG_Hostel.PG_Number LIKE @SearchValue
        )
    ORDER BY 
        CASE 
            WHEN @SortColumn = 'Person_Name' THEN PG_Person.Person_Name 
            WHEN @SortColumn = 'Person_Surname' THEN PG_Person.Person_Surname 
            -- Add more conditions for other columns
            ELSE PG_Person.Id
        END 
        OFFSET @Start ROWS 
        FETCH NEXT @Length ROWS ONLY;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_SelectById]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Person_SelectById]
    @Id int
AS
BEGIN
    SELECT * FROM PG_Person WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_SelectByOwnerIdandPersonId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Person_SelectByOwnerIdandPersonId] 
    @Owner_Id INT,
    @Person_Id INT
AS
BEGIN
    SELECT 
        PG_Person.Id,
        PG_Person.Owner_ID,
        PG_Person.Person_Name,
        PG_Person.Person_Surname,
        PG_Person.Person_Email_ID,
        PG_Person.Person_Mobile_Number,
        PG_Person.Person_Parent_Mobile_Number,
        PG_Person.Person_Address,
        PG_Person.Person_City,
        PG_Person.Person_Profession,
        PG_Person.Person_WorkPlace,
        PG_Person.Person_Image,
        PG_Person.Person_WorkPlace_MobileNumber,
        PG_Person.Person_JoningDate,
        PG_Bed.Bed_Number,
		PG_Bed.Id as Bed_Id,
        PG_Bed.Deposite,
        PG_Bed.Payment_Cycle,
        PG_Bed.Payment_Date,
        PG_Room.Room_Type,
		PG_Room.Room_SharingType,
        PG_Room.Room_Rent,
		PG_Hostel.PG_Number
    FROM 
        PG_Person
    LEFT JOIN 
        PG_Bed ON PG_Person.Id = PG_Bed.Person_ID -- Assuming there is a foreign key relationship
    LEFT JOIN 
        PG_Room ON PG_Bed.Room_ID = PG_Room.Id -- Assuming PG_Bed has a foreign key to PG_Room
	LEFT JOIN 
	    PG_Hostel on PG_Room.Hostel_ID = PG_Hostel.Id
    WHERE 
        PG_Person.Owner_ID = @Owner_Id 
        AND PG_Person.Id = @Person_Id;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_SelectByPersonId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_PG_Person_SelectByPersonId]
@Person_Id	int
as
SELECT 
        PG_Person.Id,
        PG_Person.Owner_ID,
        PG_Person.Person_Name,
        PG_Person.Person_Surname,
        PG_Person.Person_Email_ID,
        PG_Person.Person_Mobile_Number,
        PG_Person.Person_Parent_Mobile_Number,
        PG_Person.Person_Address,
        PG_Person.Person_City,
        PG_Person.Person_Profession,
        PG_Person.Person_WorkPlace,
        PG_Person.Person_Image,
        PG_Person.Person_WorkPlace_MobileNumber,
        PG_Person.Person_JoningDate,
        PG_Bed.Bed_Number,
        PG_Bed.Deposite,
        PG_Bed.Payment_Cycle,
        PG_Bed.Payment_Date,
        PG_Room.Room_Type,
		PG_Room.Id as Room_ID,
		PG_Room.Room_SharingType,
        PG_Room.Room_Rent,
		PG_Hostel.PG_Number
    FROM 
        PG_Person
    LEFT JOIN 
        PG_Bed ON PG_Person.Id = PG_Bed.Person_ID -- Assuming there is a foreign key relationship
    LEFT JOIN 
        PG_Room ON PG_Bed.Room_ID = PG_Room.Id -- Assuming PG_Bed has a foreign key to PG_Room
	LEFT JOIN 
	    PG_Hostel on PG_Room.Hostel_ID = PG_Hostel.Id
    WHERE  PG_Person.Id = @Person_Id;
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Person_Update]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Person_Update]
    @Id int,
    @Owner_ID int,
    @Person_Name varchar(50),
    @Person_Surname varchar(50),
    @Person_Mobile_Number Varchar(10),
    @Person_Parent_Mobile_Number Varchar(10),
    @Person_Email_ID varchar(100),
    @Person_Gender varchar(100),
    @Person_Address varchar(100),
    @Person_City varchar(100),
    @Person_Profession varchar(50),
    @Person_WorkPlace varchar(50),
    @Person_WorkPlace_MobileNumber varchar(50),
    @Person_JoningDate Date,
	@Person_Image nvarchar(120),
	@Person_AadharCard varchar(20),
    @Person_PassWord varchar(50)
AS
BEGIN
    UPDATE PG_Person
    SET 
        Owner_ID = @Owner_ID,
        Person_Name = @Person_Name,
        Person_Surname = @Person_Surname,
        Person_Mobile_Number = @Person_Mobile_Number,
        Person_Parent_Mobile_Number = @Person_Parent_Mobile_Number,
        Person_Email_ID = @Person_Email_ID,
        Person_Gender = @Person_Gender,
        Person_Address = @Person_Address,
        Person_City = @Person_City,
        Person_Profession = @Person_Profession,
        Person_WorkPlace = @Person_WorkPlace,
        Person_WorkPlace_MobileNumber = @Person_WorkPlace_MobileNumber,
        Person_JoningDate = @Person_JoningDate,
        Person_PassWord = @Person_PassWord,
        Person_Image = @Person_Image,
		Person_AadharCard = @Person_AadharCard,
        Person_ModificationDate = GETDATE()
    WHERE Id = @Id
END

GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Room_Delete]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Room_Delete]
    @Id int
AS
BEGIN
    DELETE FROM PG_Room WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Room_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Room_Insert]
    @Hostel_ID int,
    @Room_SharingType int,
    @Room_AllowcateBed int,
    @Room_Type Varchar(10),
	@Room_Createbed int,
	@Room_Rent varchar(20)
AS
BEGIN
    INSERT INTO PG_Room (Hostel_ID, Room_SharingType, Room_AllowcateBed,Room_Type,Room_Createbed,Room_Rent)
    VALUES (@Hostel_ID,  @Room_SharingType, @Room_AllowcateBed,@Room_Type,@Room_Createbed,@Room_Rent)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Room_SelectAll]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Room_SelectAll]
AS
    SELECT * FROM PG_Room

GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Room_SelectById]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Room_SelectById]
    @Room_Id int
AS
BEGIN
    SELECT * FROM PG_Room WHERE Id = @Room_Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Room_Update]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Room_Update]
    @Id int,
    @Hostel_ID int,
    @Room_SharingType int,
	@Room_Type varchar(10),
	@Room_Rent varchar(20)
AS
BEGIN
    UPDATE PG_Room
    SET Hostel_ID = @Hostel_ID,
        Room_SharingType = @Room_SharingType,
        Room_Type = @Room_Type,
		Room_Rent = @Room_Rent,
        Room_ModificationDate = GETDATE()
    WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Staff_Delete]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Staff_Delete]
    @Id int
AS
BEGIN
    DELETE FROM PG_Staff WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Staff_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_PG_Staff_Insert]
    @Owner_ID int,
    @Staff_Name varchar(50),
    @Staff_Surname varchar(50),
    @Staff_Mobile_Number varchar(10),
    @Staff_Gender varchar(10),
    @Staff_Address varchar(100),
    @Staff_City varchar(100)
AS
BEGIN
    INSERT INTO PG_Staff (Owner_ID, Staff_Name, Staff_Surname, Staff_Mobile_Number, Staff_Gender, Staff_Address, Staff_City)
    VALUES (@Owner_ID, @Staff_Name, @Staff_Surname, @Staff_Mobile_Number, @Staff_Gender, @Staff_Address, @Staff_City)
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Staff_SelectAll]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Staff_SelectAll]
  as
  SELECT * FROM PG_Staff 
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Staff_SelectById]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Staff_SelectById]
    @Id int
AS
BEGIN
    SELECT * FROM PG_Staff WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Staff_SelectByOwnerId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[SP_PG_Staff_SelectByOwnerId]
@Owner_Id int
as
select * from PG_Staff where PG_Staff.Owner_ID = @Owner_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_Staff_Update]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_PG_Staff_Update]
    @Id int,
    @Owner_ID int,
    @Staff_Name varchar(50),
    @Staff_Surname varchar(50),
    @Staff_Mobile_Number varchar(50),
    @Staff_Gender varchar(50),
    @Staff_Address varchar(100),
    @Staff_City varchar(100)
AS
BEGIN
    UPDATE PG_Staff
    SET Owner_ID = @Owner_ID,
        Staff_Name = @Staff_Name,
        Staff_Surname = @Staff_Surname,
        Staff_Mobile_Number = @Staff_Mobile_Number,
        Staff_Gender = @Staff_Gender,
        Staff_Address = @Staff_Address,
        Staff_City = @Staff_City,
        Owner_ModificationDate = GETDATE()
    WHERE Id = @Id
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PG_UpdateIssueStatus]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_PG_UpdateIssueStatus]
@IssueID int 
as
update PG_Issues
set Issue_Status = 1 
where PG_Issues.Id = @IssueID
GO
/****** Object:  StoredProcedure [dbo].[Sp_PG_UserNotification_Insert]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Sp_PG_UserNotification_Insert]
    @Person_ID INT,
    @Announcement_ID INT,
    @seen BIT
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO PG_UserNotifications (Person_ID, Announcement_ID, seen, created_at)
    VALUES (@Person_ID, @Announcement_ID, @seen, GETDATE());
END
GO
/****** Object:  StoredProcedure [dbo].[SP_PGBed_ChangePaymentLifeCycle]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[SP_PGBed_ChangePaymentLifeCycle]
@Bed_Id int,
@Payment_Cycle varchar(10)
as
update PG_Bed
set Payment_Cycle = @Payment_Cycle
where PG_Bed.Id = @Bed_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_RemovePersonFromBed]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_RemovePersonFromBed]
@Bed_Id int
as
update PG_Bed
set Person_ID = null,
    Deposite = null,    
	Payment_Date = null,
    Payment_Cycle = null,
	Bed_Status = 0
where Id = @Bed_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_SearchpersonByNameAndMobile]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_SearchpersonByNameAndMobile]
@NameMobileInpute varchar(30)
as
select 
	  p.Id,
      P.Person_Name,
      P.Person_Mobile_Number,
      P.Person_Parent_Mobile_Number
from PG_Person P
where p.Person_Name like '%'+@NameMobileInpute+'%'
      or p.Person_Mobile_Number like '%'+@NameMobileInpute+'%'
	  or p.Person_Parent_Mobile_Number like '%'+@NameMobileInpute+'%'


GO
/****** Object:  StoredProcedure [dbo].[SP_SelectAllEmplyRoomDetail]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[SP_SelectAllEmplyRoomDetail]
@id int
as
select PG_Room.Id,
PG_Room.Hostel_ID,
PG_Room.Room_Number,
PG_Room.Room_SharingType,
PG_Room.Room_AllowcateBed,
PG_Room.Room_GenderAllowed,
PG_Bed.Id,
PG_Bed.Room_Id,
PG_Bed.Bed_Number,
PG_Bed.Bed_Status
from PG_Room
inner join PG_Bed
on PG_Room.ID = PG_Bed.Room_Id
where PG_Bed.Bed_Status = 0 and PG_Room.Hostel_ID = @id
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectBedFromHostelId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_SelectBedFromHostelId] 
@Hostel_Id int
as
select PG_Bed.Id
	   ,PG_Bed.Bed_Number
	   ,PG_Bed.Bed_Status
	   ,PG_Room.Id as RoomId
	   ,PG_Room.Room_SharingType
	   ,PG_Hostel.PG_number
	   ,PG_Hostel.Id as HostelId
	   ,PG_Bed.Person_ID
	   ,PG_Person.Person_Name as PersonName
from PG_Bed
inner join PG_Room on PG_Bed.Room_ID = PG_Room.Id
inner join PG_Hostel on PG_Room.Hostel_ID= PG_Hostel.Id
left join PG_Person on PG_Person.Id  = PG_Bed.Person_ID
where PG_Room.Hostel_ID = @Hostel_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectBedsByRoomId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_SelectBedsByRoomId]
@Room_Id int
as
select 
     PG_Bed.Id
	,PG_Bed.Bed_Number
from PG_Bed
where PG_Bed.Room_ID = @Room_Id and PG_Bed.Bed_Status = 0
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectEmptyBedUsingOwnerId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[SP_SelectEmptyBedUsingOwnerId]
@Owner_Id int
as
select 
      PG_Bed.Id
	  ,PG_Bed.Room_ID
	  ,PG_Bed.Bed_Number
	  ,PG_Bed.Bed_Status
	  ,PG_Bed.Bed_CreatedDate
	  ,PG_Bed.Bed_ModificationDate
	  ,PG_Room.Room_AllowcateBed
	  ,PG_Room.Room_AllowcateBed
	  ,PG_Room.Room_Rent
	  ,PG_Room.Room_SharingType
	  ,PG_Room.Room_Type
	  ,PG_Hostel.Id
	  ,PG_Hostel.PG_Number
	  ,PG_Hostel.Hostel_Gender
	  ,PG_Hostel.Hostel_Type
	  ,PG_Hostel.Hostel_Society
from PG_Bed
inner join PG_Room on PG_Bed.Room_ID  = PG_Room.Id
inner join PG_Hostel on PG_Room.Hostel_ID = PG_Hostel.Id
where Bed_Status = 0 and PG_Hostel.Owner_ID = @Owner_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectHostelsByOwnerId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_SelectHostelsByOwnerId]
@Owner_Id int
as
select 
     PG_Hostel.Id
	,PG_Hostel.PG_Number
from PG_Hostel
where PG_Hostel.Owner_ID= @Owner_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectIssueListByownerId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_SelectIssueListByownerId]
@Owner_Id int
as
select 
	PG_Issues.Id
	,PG_Issues.Person_ID
	,PG_Issues.Room_ID
	,PG_Issues.Hostel_ID
	,PG_Issues.Owner_ID
	,PG_Issues.Issue_Description
	,PG_Issues.Issue_ImgPath
	,PG_Issues.Issue_Status
	,PG_Person.Person_Name
	,PG_Room.Room_SharingType
	,PG_Hostel.PG_Number
from PG_Issues
inner join PG_Person on PG_Issues.Person_ID = PG_Person.Id
inner join PG_Room on PG_Issues.Room_ID = PG_Room.Id
inner join PG_Hostel on PG_Issues.Hostel_ID= PG_Hostel.Id
where PG_Issues.Owner_ID =  @Owner_Id
order by Issue_Status asc
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectIssueListByRoomId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE procedure [dbo].[SP_SelectIssueListByRoomId]
@Room_Id int
as
select 
	PG_Issues.Id
	,PG_Issues.Person_ID
	,PG_Issues.Room_ID
	,PG_Issues.Issue_Description
	,PG_Issues.Issue_ImgPath
	,PG_Issues.Issue_Status
	,PG_Person.Person_Name
	,PG_Room.Room_Number
from PG_Issues
inner join PG_Person on PG_Issues.Person_ID = PG_Person.Id
inner join PG_Room on PG_Issues.Room_ID = PG_Room.Id
where PG_Issues.Room_ID = @Room_Id
order by Issue_Status asc
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectOwnerByEmailandPassword]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[SP_SelectOwnerByEmailandPassword]
@EmailId varchar(50),
@Password nvarchar(50)
as
select * from PG_Owner
where PG_Owner.Owner_EmailId = @EmailId and PG_Owner.Owner_PassWord = @Password
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectPaymentHistoryByPersonId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_SelectPaymentHistoryByPersonId] 
    @Person_Id int
AS
BEGIN
    SELECT 
        P.ID,
        P.Owner_Id,
        P.Person_Id,
        P.Payment_CreationDate,
		p.Payment_ReceivedDate,
        P.Payment_Status,
        R.Room_Rent
    FROM 
        PG_Payment P
    INNER JOIN 
        PG_Bed B ON P.Person_Id = B.Person_Id
    INNER JOIN 
        PG_Room R ON B.Room_Id = R.Id
    WHERE 
        P.Person_Id = @Person_Id
END;

GO
/****** Object:  StoredProcedure [dbo].[SP_SelectPersonByEmailPassword]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_SelectPersonByEmailPassword]
@Email_Id varchar(30),
@Password nvarchar(30)
as
select * from PG_Person
where Person_Email_ID  = @Email_Id and Person_PassWord = @Password
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectPersonByLatestPayment]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE Procedure [dbo].[SP_SelectPersonByLatestPayment]
@Person_Id int
as
SELECT TOP 1 * FROM PG_Payment
WHERE Person_Id = @Person_Id
ORDER BY Payment_Date DESC
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectPGByPgNumber]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure  [dbo].[SP_SelectPGByPgNumber]
@PG_Number varchar(30)
as
select PG_Hostel.Id
	   ,PG_Hostel.Hostel_Floor
	   ,PG_Hostel.Hostel_Gender
	   ,PG_Hostel.PG_Number
from PG_Hostel
where PG_Hostel.PG_Number like '%'+@PG_Number+'%'
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectPGDetalsForDashBoard]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SP_SelectPGDetalsForDashBoard] 
    @Owner_Id INT
AS
BEGIN
    -- Main query for hostels, rooms, and beds
    SELECT 
        COUNT(DISTINCT PG_Hostel.ID) AS TotalHostel,
        COUNT(DISTINCT PG_Room.Id) AS TotalRoom,
        COUNT(DISTINCT PG_Bed.Id) AS TotalBed
    FROM 
        PG_Hostel
    LEFT JOIN 
        PG_Room ON PG_Room.Hostel_ID = PG_Hostel.Id
    LEFT JOIN 
        PG_Bed ON PG_Bed.Room_ID = PG_Room.Id
    WHERE 
        PG_Hostel.Owner_ID = @Owner_Id;

    -- Separate query to count persons (assuming some other condition to identify related persons)
    SELECT 
        COUNT(DISTINCT PG_Person.Id) AS TotalPerson
    FROM 
        PG_Person
    WHERE 
        PG_Person.Owner_ID = @Owner_Id;  -- Modify this condition based on your table's structure
END
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectRoomListByHostelId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[SP_SelectRoomListByHostelId]
@Hostel_Id int
as
select * from PG_Room
where PG_Room.Hostel_ID = @Hostel_Id
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectRoomsByHostelId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_SelectRoomsByHostelId]
@Hostel_Id int
as
select 
     PG_Room.Id
	,PG_Room.Room_SharingType
from PG_Room
where PG_Room.Hostel_ID= @Hostel_Id and Room_SharingType > Room_AllowcateBed
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectRoomsByHostelIdForBed]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_SelectRoomsByHostelIdForBed]
@Hostel_Id int
as
select 
     PG_Room.Id
	,PG_Room.Room_SharingType
from PG_Room
where PG_Room.Hostel_ID= @Hostel_Id and Room_SharingType > Room_Createbed
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectuserNewNotificationCountByPersonId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[SP_SelectuserNewNotificationCountByPersonId]
@Person_Id int
as
select COUNT(*) from PG_UserNotifications
where Person_ID = @Person_Id and seen = 0
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectuserNotificationbyPersonId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE procedure [dbo].[SP_SelectuserNotificationbyPersonId]
@Person_Id int
as
select Person_ID
	  ,Announcement_ID
	  ,seen
	  ,PG_Announcements.Announcement_Title
	  ,PG_Announcements.Announcement_Message
from PG_UserNotifications
inner join PG_Announcements on Announcement_ID = PG_Announcements.ID
where Person_ID = @Person_Id 
order by seen desc
GO
/****** Object:  StoredProcedure [dbo].[SP_SelectuserOldNotificationbyPersonId]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[SP_SelectuserOldNotificationbyPersonId]
@Person_Id int
as
select Person_ID
	  ,Announcement_ID
	  ,seen
	  ,PG_Announcements.Announcement_Title
	  ,PG_Announcements.Announcement_Message
from PG_UserNotifications
inner join PG_Announcements on Announcement_ID = PG_Announcements.ID
where Person_ID = @Person_Id and seen = 1
GO
/****** Object:  StoredProcedure [dbo].[SP_UpdatePGPaymentStatus]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_UpdatePGPaymentStatus]
    @ID INT,
    @Payment_Status BIT,
	@Payment_ReceivedDate date
AS
BEGIN
    UPDATE PG_Payment
    SET Payment_Status = @Payment_Status,
	Payment_ReceivedDate = @Payment_ReceivedDate
    WHERE ID = @ID;
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_UpdateUsernotificationStatus]    Script Date: 20-10-2024 00:39:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[SP_UpdateUsernotificationStatus]
@Person_Id int
as
update PG_UserNotifications
set seen = 1
where Person_ID = @Person_Id
GO
