@{
    Layout = "~/Views/Shared/Admin/AdminLayout.cshtml";
}

@using System.Data;
<div class="container">
    <div class="page-inner">
        <div class="page-header">
            <h3 class="fw-bold mb-">Bed</h3>
            <ul class="breadcrumbs mb-2">
                <li class="nav-home">
                    <a href="#">
                        <i class="icon-home"></i>
                    </a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">Bed</a>
                </li>
                <li class="separator">
                    <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                    <a href="#">See All Bed</a>
                </li>
            </ul>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Bed View and Delete</h4>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="multi-filter-select"
                                   class="display table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Bed Number</th>
                                        <th>Sharing Type</th>
                                        <th>PG No</th>
                                        <th>Assign Person</th>
                                        <th>Status</th>
                                        <th>Delete</th>
                                    </tr>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <th>Name</th>
                                        <th>Position</th>
                                        <th>Office</th>
                                        <th>Age</th>
                                    </tr>
                                </tfoot>
                                <tbody>
                                    @foreach (DataRow dr in Model.Rows)
                                    {
                                        <tr>
                                            <td>@dr["Bed_Number"]</td>
                                            <td>@dr["Room_SharingType"]</td>
                                            <td>@dr["PG_Number"]</td>
                                            <td>
                                                @{
                                                    var personName = dr["PersonName"] != DBNull.Value ? dr["PersonName"].ToString() : "No Name"; // Replace "No Name" with any placeholder you prefer
                                                }
                                                @personName
                                            </td>

                                            <td>
                                                @{

                                                    if (Convert.ToInt32(dr["Bed_Status"]) == 0)
                                                    {
                                                        <a href="javascript:void(0)"
                                                           class="btn btn-link btn-primary"
                                                           onclick="openAssignBedModal('@Convert.ToInt32(dr["Id"])')">
                                                            <i class="fas fa-plus-circle"></i>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-success">Assigned <a class="badge badge-black" asp-area="PG_Person" asp-controller="PG_Person" asp-action="PersonDetails" asp-route-Person_Id="@Convert.ToInt32(dr["Person_ID"])">View Person</a></span>
                                                        <span>
                                                            <a class="badge badge-danger unassign-person" href="javascript:void(0)" data-bed-id="@Convert.ToInt32(dr["Id"])">UnAssign</a>
                                                        </span>
                                                        <span>
                                                            <a class="badge badge-info" href="javascript:void(0)" onclick="openChangePaymentModal(@Convert.ToInt32(dr["Id"]))" data-bed-id="@Convert.ToInt32(dr["Id"])">Chnage<br>Payement Cycle</a>
                                                        </span>

                                                    }
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    if (Convert.ToInt32(dr["Bed_Status"]) == 0)
                                                    {
                                                        <div class="form-button-action">
                                                            <form id="deleteForm-@dr["Id"]" method="post" asp-area="PG_Bed" asp-controller="PG_Bed" asp-action="DeleteBed" asp-route-Bed_Id="@Convert.ToInt32(dr["Id"])">
                                                                <input type="hidden" name="Id" value="@Convert.ToInt32(dr["Id"])" />
                                                                <button type="button"
                                                                        onclick="confirmDelete('@dr["Id"]')"
                                                                        title=""
                                                                        class="btn btn-link btn-danger mt-2"
                                                                        data-original-title="Remove">
                                                                    <i class="fa fa-times"></i>
                                                                </button>
                                                            </form>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-warning">Person Has<br>Assign </span>
                                                    }
                                                }

                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="paymentCycleModal" tabindex="-1" role="dialog" aria-labelledby="paymentCycleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentCycleModalLabel">Assign Bed to Person</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="paymentCycleForm">
                    <div class="form-group">
                        <input id="bedid" type="hidden" name="bedid" />
                        <label for="paymentCycle">Select Payment Life Cycle</label>
                        <select class="form-control" id="paymentCycle" name="paymentCycle">
                            <option value="Daily">Daily</option>
                            <option value="Weekly">Weekly</option>
                            <option value="Monthly">Monthly</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="submitPaymentCycle">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script>
    function openChangePaymentModal(bedId) {
        // This alert is to check if the modal is being opened correctly
        // alert("Opening modal for bedId: " + bedId);

        // Set the bedId in the hidden input field
        $('#bedid').val(bedId);

        // Show the modal
        $('#paymentCycleModal').modal('show');
    }

    // Handle form submission using AJAX
    $(document).ready(function () {
        $('#submitPaymentCycle').on('click', function () {
            // Get bedId and paymentCycle values
            var bedId = $('#bedid').val();
            var paymentCycle = $('#paymentCycle').val();

            // // Add a debug alert to verify that the submission process is starting
            // alert("Submitting payment cycle change for bedId: " + bedId + ", Cycle: " + paymentCycle);

            // Perform the AJAX request
            $.ajax({
                url: '@Url.Action("ChangePaymentLifeCycle", "PG_Bed", new { Area = "PG_Bed" })',
                method: 'POST',
                data: { bedid: bedId, paymentCycle: paymentCycle },
                success: function (response) {
                    if (response.success) {
                        $('#paymentCycleModal').modal('hide');
                        Swal.fire({
                            title: 'Success!',
                            text: response.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: 'Try Again'
                        });
                    }
                },
                error: function (xhr, status, error) {
                    alert('An error occurred: ' + error);
                }
            });
        });
    });
</script>





<div class="modal fade" id="assignBedModal" tabindex="-1" aria-labelledby="assignBedModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="assignBedModalLabel">Assign Bed to Person</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form for assigning bed -->
                <form id="assignBedForm" method="post">
                    <input type="hidden" id="Bed_ID" name="Bed_ID" value="" />
                    <input type="hidden" id="Person_ID" name="Person_ID" value="" />
                    <div class="form-group">
                        <label for="Person_MobileNumber">Person Mobile Number</label>
                        <input type="text" maxlength="10" id="Person_MobileNumber" name="Person_MobileNumber" oninput="OnMobileNumberChange()" class="form-control" required autocomplete="off" />
                        <div id="suggestions" class="suggestions-dropdown">
                            <!-- Suggestions will be dynamically populated here -->
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="Person_MobileNumber">Select Payment Life Cycle</label>
                        <select class="form-control" id="Payment_Cycle" name="Payment_Cycle" required>
                            <option value=""></option>
                            <option value="Daily">Daily</option>
                            <option value="Weekly">Weekly</option>
                            <option value="Monthly">Monthly</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Deposit">Enter Deposit</label>
                        <input type="text" id="Deposit" name="Deposit" class="form-control" required autocomplete="off" />
                    </div>
                    <div class="form-group">
                        <label for="Payment_Date">Enter Starting Payment Date</label>
                        <input type="date" id="Payment_Date" name="Payment_Date" class="form-control" required autocomplete="off" min="1900-01-01" max="2099-12-31" />
                    </div>


                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>

    function openAssignBedModal(bedId) {
        $('#Bed_ID').val(bedId);
        $('#assignBedModal').modal('show');
    }


    function OnMobileNumberChange() {
        var mobileNumber = $('#Person_MobileNumber').val();

        if (mobileNumber) {
            $.ajax({
                url: "@Url.Action("getPersonsByPartialMobileNumber", "PG_Bed", new { area = "PG_Bed" })", // Ensure this URL is correctly formattedtype: 'GET',
                data: { partialMobileNumber: mobileNumber }, // Send the mobile number to the server
                success: function (response) {
                    // Clear previous suggestions
                    $('#suggestions').empty();

                    // Check if we have any matching persons
                    if (response.length > 0) {
                        // Show the dropdown
                        $('#suggestions').show();

                        response.forEach(function (person) {
                            $('#suggestions').append(
                                `<div class="suggestion-item" data-person-id="${person.id}">${person.person_Mobile_Number}</div>`
                            );
                        });
                    } else {
                        // Hide the alert since it's working and append "No matches found"
                        console.log(response); // This can help you debug response structure
                        $('#suggestions').append('<div class="suggestion-item">No matches found</div>');
                        $('#suggestions').show(); // Ensure the suggestions box is visible
                    }
                },
                error: function () {
                    alert('Error fetching person data. Please try again.');
                }
            });
        } else {
            $('#suggestions').hide(); // Hide suggestions if input is empty
        }
    }



    // Handle selection of a suggestion
    $(document).on('click', '.suggestion-item', function () {
        var selectedNumber = $(this).text(); // Get the selected mobile number
        var personId = $(this).data('person-id'); // Get the associated person ID

        $('#Person_MobileNumber').val(selectedNumber); // Set input value to selected number
        $('#Person_ID').val(personId); // Set input value to selected number
        $('#suggestions').hide(); // Hide suggestions
    });

    // Hide suggestions when clicking outside
    $(document).on('click', function (event) {
        if (!$(event.target).closest('#Person_MobileNumber').length) {
            $('#suggestions').hide(); // Hide suggestions
        }
    });


    $(document).ready(function () {
        $('#assignBedForm').on('submit', function (e) {
            // Get the value of Person_ID
            var personID = $('#Person_ID').val(); // Assuming the input field for Person_ID has an ID of 'Person_ID'
            e.preventDefault(); // Prevent the default form submission

            if (!personID) {
                // Show error message using SweetAlert and wait for user to click OK
                Swal.fire({
                    title: 'Error!',
                    text: 'Person mobile is not found',
                    icon: 'error',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    $('#assignBedForm').trigger('reset'); // This will reset the form fields
                });
                return;
            }

            // Gather form data
            var formData = $(this).serialize(); // Serializes form elements for AJAX

            // AJAX request
            $.ajax({
                url: "@Url.Action("AssignBedToPerson", "PG_Bed", new { area = "PG_Bed" })",
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        // SweetAlert for Success message
                        Swal.fire({
                            title: 'Success!',
                            text: response.message, // Message from TempData
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.reload();
                            }
                        });
                    } else {
                        // SweetAlert for Error message
                        Swal.fire({
                            title: 'Error!',
                            text: response.message, // Error message from TempData
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }

                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: 'Error!',
                        text: response.message, // Error message from TempData
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });

        $(document).on('click', '.unassign-person', function (e) {
            e.preventDefault(); // Prevent the default action
            var bedId = $(this).data('bed-id'); // Get the Bed_Id from data attribute

            // Show Swal fire confirmation before proceeding
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to unassign this person from the bed?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, unassign!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Proceed with the AJAX request if confirmed
                    $.ajax({
                        url: "@Url.Action("removePersonFromBed", "PG_Bed", new { area = "PG_Bed" })",  // The URL to your action
                        type: 'POST',  // Assuming it's a POST request
                        data: { Bed_Id: bedId },  // Sending the Bed_Id
                        success: function (response) {
                            // On success, show the SweetAlert success message
                            Swal.fire({
                                title: 'Success!',
                                text: response.message, // Message from TempData
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();  // Reload the page after confirmation
                                }
                            });
                        },
                        error: function (xhr, status, error) {
                            // Handle error (e.g., show an error message)
                            Swal.fire({
                                title: 'Error!',
                                text: 'Failed to unassign person. Please try again later.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                            console.error(error);
                        }
                    });
                }
            });
        });

    });


    function confirmDelete(OwnerId) {
        Swal.fire({
            title: 'Are you sure?',
            text: `You won't be able to revert this!`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel!',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                // Submit the form for the specific adminId
                document.getElementById(`deleteForm-${OwnerId}`).submit();
            }
        });
    }

    $(document).ready(function () {
        var message = '@TempData["Message"]';
        var alertType = '@TempData["AlertType"]';

        if (message) {
            Swal.fire({
                icon: alertType,
                title: message,
                showConfirmButton: true
            }).then((result) => {

                if (result.isConfirmed) {
                    location.reload();
                }
            });
        }
    });
</script>